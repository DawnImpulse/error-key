name: CD
on:
  push:
    branches:
      - release
jobs:
  # test the code with different versions of node
  testing:
    description: setup/build/test code in multiple Node environments
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '18' ]
    name: Testing on Node v${{ matrix.node }}
    steps:
      # checkout the source code
      - name: Checkout Code
        uses: actions/checkout@v2

      # setup node environment
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      # get yarn cache directory path
      - name: Installing Dependencies (1/3 - get yarn cache path)
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # checking / setting up the cache
      - name: Installing Dependencies (2/3 - checking/setting up cache)
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # installing dependencies if cache hit fails
      - name: Installing Dependencies (3/3 - install if no cache hit)
        run: yarn install

      # test the code
      - name: Testing Code
        run: npm run test

  # publish to npm
  publish-npm:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      # checkout the source code
      - name: Checkout Code
        uses: actions/checkout@v2

      # get yarn cache directory path
      - name: Installing Dependencies (1/3 - get yarn cache path)
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # checking / setting up the cache
      - name: Installing Dependencies (2/3 - checking/setting up cache)
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # installing dependencies if cache hit fails
      - name: Installing Dependencies (3/3 - install if no cache hit)
        run: yarn install

      # build
      - name: Build
        run: npm run build

      # save build to artifacts
      - uses: actions/upload-artifact@main
        with:
          name: dist
          path: dist/

      # deploy
      - name: Deploy to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
