name: Test
on:
  push:
    branches:
      - develop
jobs:
  testing:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      #       checkout the source code
      - name: Checkout Code
        uses: actions/checkout@v2

      #       setup node environment
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      #       get yarn cache directory path
      - name: Installing Dependencies (1/3 - get yarn cache path)
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      #       checking / setting up the cache
      - name: Installing Dependencies (2/3 - checking/setting up cache)
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      #       installing dependencies if cache hit fails
      - name: Installing Dependencies (3/3 - install if no cache hit)
        #          if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      #       test the code
      - name: Testing Code (with coverage)
        run: npm run coverage

      #       upload coverage to codecov
      - name: Code Coverage
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true